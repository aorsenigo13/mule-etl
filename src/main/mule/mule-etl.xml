<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
	<flow name="importFlow" doc:id="18136e9d-2fd8-4487-8343-a7f78b0ae3d4" initialState="stopped">
		<file:listener doc:name="import-csv" doc:id="46098786-5917-44ea-9f76-3f0978f43106" config-ref="File_Config_TestFolder" directory="C:\test\incoming" moveToDirectory="C:\test\processed">
			<scheduling-strategy >
				<fixed-frequency frequency="3000" />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.csv"/>
		</file:listener>
		<logger level="INFO" doc:name="Logger" doc:id="295fdce6-8381-469a-9c16-34513f76510b" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="ed6131d9-8bc2-4113-80e8-bcc5e9a674da" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="c23d1ab7-cb7d-4e58-a7ef-c714a64e7688" batchSize="3">
			<ee:transform doc:name="Transform Message" doc:id="55a77203-5099-403e-9042-25ebf0192ace" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/csv

---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.id,
	nominativo: capitalize(payload01.nomedefault "") ++' '++ capitalize(payload01.cognome),
	occupazione: payload01.categoria,
	livello: payload01.livello,
	cap: payload01.cap,
	residenza: upper(payload01.citta)
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="6ae475ff-fa2e-4ae3-b03d-c676c495bdc0" message="#[payload.nominativo]" />
			<db:bulk-insert doc:name="Bulk insert" doc:id="e8d6cd4d-429d-4829-9ec8-bacbc541a4c5" config-ref="Database_Config_Derby">
				<db:sql ><![CDATA[INSERT INTO DIPENDENTI(id, nominativo, occupazione, livello, cap, residenza) 
VALUES (:id, :nominativo, :occupazione, :livello, :cap, :residenza)]]></db:sql>
			</db:bulk-insert>
		</foreach>
	</flow>
	<flow name="syncDBFlow" doc:id="1be8b65d-71ca-465e-8946-919dbb20ff0f" initialState="started">
		<db:listener doc:name="On Table Row DIPENDENTI" doc:id="3b41bd1b-7485-480b-948b-a18b97ab4647" config-ref="Database_Config_Derby" watermarkColumn="ID" idColumn="ID" table="DIPENDENTI">
			<scheduling-strategy >
				<fixed-frequency frequency="5000"/>
			</scheduling-strategy>
		</db:listener>
		<logger level="INFO" doc:name="Logger" doc:id="bc830f1d-f333-4393-b3f4-9e320449e31f" message="#[payload]"/>
		<file:write doc:name="Write Data" doc:id="3a7e96c7-1174-4ba7-b9a3-825b07f881be" path="C:\test\processed\export.json" mode="APPEND" config-ref="File_Config_TestFolder">
			<file:content ><![CDATA[#[output application/json
---
payload]]]></file:content>
		</file:write>
	</flow>
	<flow name="createFlow" doc:id="399ff748-79d9-4959-8d40-c4353c051576" >
		<http:listener doc:name="GET /create" doc:id="c1f6ad9a-ba5f-4fe6-b7eb-df0096457f28" config-ref="HTTP_Listener_config" path="/create" allowedMethods="GET">
			<http:error-response >
				<http:body ><![CDATA[#[payload]]]></http:body>
			</http:error-response>
		</http:listener>
		<db:execute-ddl doc:name="Execute DDL" doc:id="e9a1bfaf-c48f-4896-8365-964e6506e5a4" config-ref="Database_Config_Derby">
			<db:sql ><![CDATA[CREATE TABLE DIPENDENTI (
	id VARCHAR(100),
    nominativo VARCHAR(100),
    occupazione VARCHAR(100),
    livello VARCHAR(100),
    cap VARCHAR(100),
    residenza VARCHAR(100)
)]]></db:sql>
		</db:execute-ddl>
		<logger level="INFO" doc:name="Logger" doc:id="b7654fa9-66df-4d79-93da-963513973357" />
		<ee:transform doc:name="Transform Message" doc:id="4e4c3dc5-a567-4188-a2fd-286c58c7010e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="eab2288e-3fe3-4b3b-b9c2-60588c486f1e" >
				<ee:transform doc:name="Transform Message" doc:id="8aa72071-a514-471d-819a-0e9d9fcad97e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	"message": "Si è verificato un errore nella creazione della tabella " ++ error.description as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="deletDipendenti" doc:id="b172ee80-686a-4c1d-a7cd-f80aaea84d6c" >
		<http:listener doc:name="Listener" doc:id="0813cd62-416b-436c-98d6-b16698106f8a" config-ref="HTTP_Listener_config" path="/dipendenti" allowedMethods="DELETE"/>
		<db:delete doc:name="Delete" doc:id="b4c1fb95-67be-4867-8eca-0e3ff3c34658" config-ref="Database_Config_Derby">
			<db:sql ><![CDATA[DELETE FROM DIPENDENTI]]></db:sql>
		</db:delete>
		<db:execute-ddl doc:name="Drop Table" doc:id="c085e9f0-f4af-42b1-b56e-43f89cd94381" config-ref="Database_Config_Derby">
			<db:sql ><![CDATA[DROP TABLE DIPENDENTI]]></db:sql>
		</db:execute-ddl>
		<flow-ref doc:name="createFlow" doc:id="f5b5517a-7c69-480e-bcc4-111cba304947" name="createFlow"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="6a552da6-afc7-4ece-8fae-d23eae0a9e75" >
				<ee:transform doc:name="Transform Message" doc:id="2e9e538a-b036-4b35-b3c3-21a885ed1f59" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Errore nella pulizia della tabella dipendendenti: " ++ error.description as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="getAllDipendenti" doc:id="02f9014b-930c-41fb-adf0-b96b30c314e3" >
		<http:listener doc:name="GET /dipendenti" doc:id="da72ede8-fd5d-46de-a477-335e23609ba9" config-ref="HTTP_Listener_config" path="/dipendenti" allowedMethods="GET"/>
		<db:select doc:name="select all dipendenti" doc:id="8a903f47-ddff-4893-9d87-18aaa499e5c1" config-ref="Database_Config_Derby">
			<db:sql ><![CDATA[SELECT * FROM DIPENDENTI]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="5f08de2d-a773-4d30-a1d7-139ef6b58ebf" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="insertDipendente" doc:id="ffc89fac-a9b3-4371-b327-954596be3ef3" >
		<http:listener doc:name="POST /dipendenti" doc:id="f721de87-42ea-4ad6-9ce2-371966531189" config-ref="HTTP_Listener_config" path="/dipendenti" allowedMethods="POST">
			<http:error-response >
				<http:body ><![CDATA[#[payload]]]></http:body>
			</http:error-response>
		</http:listener>
		<json:validate-schema doc:name="Validate Schema" doc:id="460a21ca-2d07-48d2-800b-338a39615184" schema="dipendente-schema.json"/>
		<db:insert doc:name="Insert dipendente" doc:id="0ef4b12f-3baf-46a8-b9fe-565148d8ef62" config-ref="Database_Config_Derby">
			<db:sql ><![CDATA[INSERT INTO DIPENDENTI(id, nominativo, occupazione, livello, cap, residenza) 
VALUES (:id, :nominativo, :occupazione, :livello, :cap, :residenza)]]></db:sql>
			<db:input-parameters ><![CDATA[#[payload]]]></db:input-parameters>
		</db:insert>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="7ac1a88e-4fde-4ae2-ab10-b01f8827897b" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="4b11a921-25cf-4b24-9d1c-31ef99ccde9f" type="JSON:INVALID_INPUT_JSON, JSON:INVALID_SCHEMA, JSON:SCHEMA_NOT_FOUND, JSON:SCHEMA_NOT_HONOURED">
				<ee:transform doc:name="Transform Message" doc:id="370fd016-cfc6-4b9f-a6cb-d16425d864c8" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "il formato json dei dati non è corretto" ++ error.description as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b72e9a40-9b3e-432e-9142-59e49b22a4a8" type="ANY">
				<ee:transform doc:name="Transform Message" doc:id="965a6a24-e7d8-4123-b6e6-e482d4a93a0f">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "errore nel caricamento del record "++ error.description as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="parallel_importFlow" doc:id="79a3f57e-6239-45ea-ae2e-4e8731dc7bde" initialState="started" >
		<file:listener doc:name="impot-csv" doc:id="27c19bae-0140-4a13-985b-283d181d9d17" config-ref="File_Config_TestFolder" directory="C:\test\incoming" moveToDirectory="C:\test\processed">
			<scheduling-strategy >
				<fixed-frequency frequency="3000" />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.csv" />
		</file:listener>
		<logger level="INFO" doc:name="Logger" doc:id="aa11eca8-36d8-4592-a411-11b32b16ed04" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="17ac8cb8-698e-404f-8c42-bce80ca8b371" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<parallel-foreach doc:name="Parallel For Each" doc:id="66e5c7be-b80d-470e-9dd4-0b08ba17a896" >
			<ee:transform doc:name="Transform Message" doc:id="1f67c48e-0084-4212-b822-c7c1d5e1a83c">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/csv

---
{
	id: payload.id,
	nominativo: capitalize(payload.nomedefault "") ++' '++ capitalize(payload.cognome),
	occupazione: payload.categoria,
	livello: payload.livello,
	cap: payload.cap,
	residenza: upper(payload.citta)
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="1dd35b25-5bae-403b-94ee-7f1f535dac80" message="#[payload.nominativo]" />
			<db:bulk-insert doc:name="Bulk insert" doc:id="3830b8b7-ce68-4773-b163-ecc3d82e948f" config-ref="Database_Config_Derby">
				<db:sql><![CDATA[INSERT INTO DIPENDENTI(id, nominativo, occupazione, livello, cap, residenza) 
VALUES (:id, :nominativo, :occupazione, :livello, :cap, :residenza)]]></db:sql>
			</db:bulk-insert>
		</parallel-foreach>
		
	</flow>
</mule>
